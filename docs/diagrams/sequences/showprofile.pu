@startuml profile sequence diagram
!include ../../style/class.pu
[-> AuthGuard: Utente con id 1 desidera navigare alla pagina profilo e attiva canActivate()
activate AuthGuard
AuthGuard -> ProfileComponent: consente l'accesso alla pagina
deactivate AuthGuard
activate ProfileComponent
ProfileComponent -> ProfileComponent: getUserById(1)
activate ProfileComponent
ProfileComponent -> UserService: getUserById(1)
activate UserService
UserService -> HttpClientService: get<User>('users/1')
activate HttpClientService
HttpClientService -> AuthHttpInterceptor: manda richiesta http
activate AuthHttpInterceptor
AuthHttpInterceptor -> API: clona, aggiunge un header e rimanda la richiesta
deactivate AuthHttpInterceptor
activate API
API --> HttpClientService: risposta http
deactivate API
HttpClientService --> UserService: Observable<HttpResponse<User>>
deactivate HttpClientService
UserService --> ProfileComponent: Observable<User>
deactivate UserService
ProfileComponent --> ProfileComponent: aggiorna proprio campo utente
deactivate ProfileComponent
[<-- ProfileComponent: La vista si aggiorna
deactivate ProfileComponent
@enduml
